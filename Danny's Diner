CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');
  

#Description

SELECT *
FROM members;
SELECT *
FROM menu;
SELECT *
FROM orders;
SELECT *
FROM sales;

#1 What is the total amount each customer spent at the restaurant?

SELECT customer_id, SUM(price) AS total
FROM sales
JOIN menu ON sales.product_id = menu.product_id
GROUP BY customer_id;

#2 How many days has each customer visited the restaurant?

SELECT customer_id, count(DISTINCT order_date) AS Unique_days
FROM sales
GROUP BY customer_id;

#3 What was the first item FROM the menu purchased by each customer?

WITH rank_data AS (
SELECT customer_id, order_date , menu.product_id, menu.product_name,
rank() over ( partition by customer_id ORDER BY order_date  ) AS  ranking
FROM sales
inner JOIN menu
ON menu.product_id = sales.product_id)
SELECT * FROM rank_data WHERE ranking = 1;

#4 What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT product_name, count(product_name) AS Selling_count
FROM sales
JOIN menu ON sales.product_id = menu.product_id
GROUP BY product_name
ORDER BY Selling_count DESC
limit 1;

#5 Which item was the most popular for each customer?

SELECT customer_id, product_name, count(product_name) AS Item
FROM sales
JOIN menu ON sales.product_id = menu.product_id
GROUP BY customer_id, product_name
ORDER BY Item DESC, customer_id;

#6 Which item was purchased first by the customer after they became a member?

SELECT distinct sales.customer_id, menu.product_name, MIN(order_date) AS ordered_on, members.join_date
FROM sales
JOIN members ON sales.customer_id = members.customer_id
JOIN menu ON sales.product_id = menu.product_id
WHERE order_date >= JOIN_date
GROUP BY sales.customer_id, menu.product_name, members.join_date
having	count(*) =1
ORDER BY ordered_on;

#7 Which item was purchased just before the customer became a member?

SELECT sales.customer_id, menu.product_name, max(order_date), members.JOIN_date
FROM sales
JOIN members ON sales.customer_id = members.customer_id
JOIN menu ON sales.product_id = menu.product_id
WHERE order_date < Join_date
GROUP BY sales.customer_id, menu.product_name, members.join_date;

#8 What is the total items and amount spent for each member before they became a member?

SELECT sales.customer_id, sum(price) AS Total_sum, count(sales.product_id) AS Total_item
FROM sales
JOIN members ON sales.customer_id = members.customer_id
JOIN menu ON sales.product_id = menu.product_id
WHERE sales.order_date < members.join_date
GROUP BY sales.customer_id ;

#9 If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

WITH points AS (
SELECT sales.customer_id,
		sum(CASE WHEN sales.product_id =1 THEN price * 20 ELSE price * 10 END) AS Total_points
FROM sales
JOIN members ON sales.customer_id = members.customer_id
JOIN menu ON sales.product_id = menu.product_id
GROUP BY sales.customer_id)
SELECT * FROM points;


#10 In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

WITH customer_points AS (
SELECT sales.customer_id, 
		sum(price * 2 ) AS Total_points
FROM sales
JOIN members ON sales.customer_id = members.customer_id
JOIN menu ON sales.product_id = menu.product_id
WHERE order_date >= join_date
GROUP BY sales.customer_id)
SELECT * FROM customer_points;
